{"version":3,"sources":["preact-photon.js"],"names":[],"mappings":"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","file":"preact-photon.js","sourcesContent":["/** @jsx h */\nimport { h } from 'preact';\n\nconst EMPTY = {};\n\n/** @private */\nlet component = render => (props=EMPTY) => render(props);\n\n/** @private */\nlet c = (...args) => [].concat(...args.filter( x => x )).join(' ');\n\n/** @private */\nlet componentNode = (Name, classes) => component( ({ children, ...props }) => (\n\t<Name {...props} class={c(props.class, classes)}>{children}</Name>\n));\n\n/** App \"footer\" bar, shown at the bottom of a window.\n *\t@class\n */\nexport const Header = componentNode('header', ['toolbar toolbar-header']);\n\n/** App \"header\" bar, shown at the top of a window.\n *\t@class\n */\nexport const Footer = componentNode('footer', ['toolbar toolbar-footer']);\n\n/** Toolbar title.\n *\t@class\n */\nexport const Title = componentNode('h1', 'title');\n\n\n/** Group buttons together.\n *\t@class\n *\t@example\n *\t<ButtonGroup>\n *\t\t<Button>One</Button>\n *\t\t<Button>Two</Button>\n *\t</ButtonGroup>\n */\nexport const ButtonGroup = componentNode('div', 'btn-group');\n\n/** Buttons. They are clickable.\n *\t@class\n *\t@param {object} props\n *\t@param {string} [icon]\t\t\t\tIf supplied, shows the given named icon to the left of the button text\n *\t@param {boolean} [primary=false]\tMake the button display as a default action\n *\t@example\n *\t<Button>Label Text</Button>\n *\t@example\n *\t<Button icon=\"home\">Home</Button>\n *\t@example\n *\t<Button large>Large Button</Button>\n *\t@example\n *\t<Button mini>Small Button</Button>\n *\t@example\n *\t<Button primary>Preferred Action</Button>\n *\t@example\n *\t<Button type=\"positive\">Green</Button>\n *\t@example\n *\t<Button type=\"negative\">Red</Button>\n *\t@example\n *\t<Button type=\"warning\">Yellow</Button>\n */\nexport const Button = component( ({\n\tclass: className,\n\tchildren,\n\ticon,\n\ttype,\n\tprimary,\n\tdropdown,\n\tmini,\n\tlarge,\n\tform,\n\t...props\n}) => (\n\t<button {...props} class={c(\n\t\tclassName,\n\t\t`btn btn-${type || (primary ? 'primary' : 'default')}`,\n\t\tdropdown && 'btn-dropdown',\n\t\tlarge && 'btn-large',\n\t\tmini && 'btn-mini',\n\t\tform && 'btn-form'\n\t)}>\n\t\t{ icon ? (<Icon name={icon} text={ children && children.length ? true : null } />) : null }\n\t\t{ children }\n\t</button>\n));\n\n\n/** A named icon/glyph from the nice built-in list of icons.\n *\t@class\n *\t@example\n *\t<Icon name=\"close\" />\n */\nexport const Icon = component( ({ class:className, text, name, children, ...props }) => (\n\t<span {...props} class={c(className, `icon icon-${name}`, text && 'icon-text')}>{ children }</span>\n));\n\n\n/** Groups tabs together into a horizontal.\n *\t@class\n *\t@example\n *\t<TabGroup>\n *\t\t<Tab>One</Tab>\n *\t\t<Tab>Two</Tab>\n *\t</TabGroup>\n */\nexport const TabGroup = componentNode('div', 'tab-group');\n\n/** For building MDIs. Has a close button by default, add `close=\"false\"` to turn it off.\n *\t@class\n *\t@example\n *\t<Tab>title</Tab>\n *\t@example\n *\t<Tab close=\"false\">title</Tab>\n */\nexport const Tab = component( ({ class:className, close, children, ...props }) => (\n\t<div class={c(className, 'tab-item')}>\n\t\t{ String(close)==='false' ? null : <Icon name=\"cancel\" class=\"icon-close-tab\" /> }\n\t\t{ children }\n\t</div>\n));\n\nTabGroup.Item = Tab;\n\n\n/** Group of sidebar navigation items\n *\t@class\n *\t@example\n *\t<NavGroup>\n *\t\t<NavGroup.Title>Faves</NavGroup.Title>\n *\t\t<NavGroup.Item>Foo</NavGroup.Item>\n *\t</NavGroup>\n */\nexport const NavGroup = componentNode('nav', 'nav-group');\n\n/** Title for a group of navigation items.\n *\t@class\n *\t@example\n *\t<NavGroup.Title>Faves</NavGroup.Title>\n */\nNavGroup.Title = componentNode('h5', 'nav-group-title');\n\n/** A single navigation item with optional icon.\n *\t@class\n *\t@example\n *\t<NavGroup.Item>Home</NavGroup.Item>\n *\t@example\n *\t<NavGroup.Item icon=\"folder\">Documents</NavGroup.Item>\n */\nNavGroup.Item = component( ({ class:className, icon, children, ...props }) => (\n\t<span {...props} class={c(className, 'nav-group-item')}>\n\t\t{ icon ? (<Icon name={icon} />) : null }\n\t\t{ children }\n\t</span>\n));\n\n\n/** Group of list items\n *\t@class\n *\t@example\n *\t<ListGroup>\n *\t\t<ListGroup.Header>\n *\t\t\t<input class=\"form-control\" type=\"text\" placeholder=\"Search...\">\n *\t\t</ListGroup.Header>\n *\t\t<ListGroup.Item>Foo</ListGroup.Item>\n *\t</ListGroup>\n */\nexport const ListGroup = componentNode('ul', 'list-group');\n\n/** Top header item in a list group.\n *\t@class\n *\t@example\n *\t<ListGroup.Header>\n *\t\t<input class=\"form-control\" type=\"text\" placeholder=\"Search...\">\n *\t</ListGroup.Header>\n */\nListGroup.Header = componentNode('li', 'list-group-header');\n\n/** A single navigation item with optional icon.\n *\t@class\n *\t@example\n *\t<ListGroup.Item>Home</ListGroup.Item>\n */\nListGroup.Item = componentNode('li', 'list-group-item');\n\n\n/** HTML `<form>` */\nexport const Form = componentNode('form');\n\n/** Basically `<fieldset>` */\nForm.Group = componentNode('div', 'form-group');\n\n/** Basically `<input type=\"checkbox\">` */\nForm.CheckBox = component( ({ class:className, name, checked, defaultChecked, value, label, children, ...props }) => (\n\t<div {...props} class={c(className, 'checkbox')}>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name={name} checked={checked} value={value} defaultChecked={defaultChecked} />\n\t\t\t{ label || null }\n\t\t\t{ children }\n\t\t</label>\n\t</div>\n));\n\n/** Basically `<input type=\"radio\">` */\nForm.Radio = component( ({ class:className, name, checked, defaultChecked, value, label, children, ...props }) => (\n\t<div {...props} class={c(className, 'radio')}>\n\t\t<label>\n\t\t\t<input type=\"radio\" name={name} checked={checked} value={value} defaultChecked={defaultChecked} />\n\t\t\t{ label || null }\n\t\t\t{ children }\n\t\t</label>\n\t</div>\n));\n\n/** Group buttons at the bottom of a form. */\nForm.Actions = componentNode('div', 'form-actions');\n\n\n/** Just an enhanced `<table>` */\nexport const Table = component( ({ class:className, striped, children, ...props }) => (\n\t<table {...props} class={c(className, striped && 'table-striped')}>\n\t\t{ children }\n\t</table>\n));\n\n\n// export class Header extends Component {\n// \trender({ toolbar, title, children }) {\n// \t\treturn (\n// \t\t\t<header class=\"toolbar toolbar-header\">\n// \t\t\t\t{ title ? (<h1 class=\"title\">{ title }</h1>) : null }\n// \t\t\t\t{ children }\n// \t\t\t</header>\n// \t\t);\n// \t}\n// }\n//\n// export class Button extends Component {\n// \trender({ icon, children }) {\n// \t\treturn (\n// \t\t\t<button class=\"btn btn-default\">\n// \t\t\t\t{ icon ? (<Icon icon=\"home\" text />) : null }\n// \t\t\t\t{ children }\n// \t\t\t</button>\n// \t\t);\n// \t}\n// }\n"]}